// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nats-io/nats.go/jetstream (interfaces: ConsumerInfoLister)
//
// Generated by this command:
//
//	mockgen --destination internal/pkg/mocks/jetstream_consumer_info_listener.go --package mocks github.com/nats-io/nats.go/jetstream ConsumerInfoLister
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	jetstream "github.com/nats-io/nats.go/jetstream"
	gomock "go.uber.org/mock/gomock"
)

// MockConsumerInfoLister is a mock of ConsumerInfoLister interface.
type MockConsumerInfoLister struct {
	ctrl     *gomock.Controller
	recorder *MockConsumerInfoListerMockRecorder
}

// MockConsumerInfoListerMockRecorder is the mock recorder for MockConsumerInfoLister.
type MockConsumerInfoListerMockRecorder struct {
	mock *MockConsumerInfoLister
}

// NewMockConsumerInfoLister creates a new mock instance.
func NewMockConsumerInfoLister(ctrl *gomock.Controller) *MockConsumerInfoLister {
	mock := &MockConsumerInfoLister{ctrl: ctrl}
	mock.recorder = &MockConsumerInfoListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConsumerInfoLister) EXPECT() *MockConsumerInfoListerMockRecorder {
	return m.recorder
}

// Err mocks base method.
func (m *MockConsumerInfoLister) Err() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Err")
	ret0, _ := ret[0].(error)
	return ret0
}

// Err indicates an expected call of Err.
func (mr *MockConsumerInfoListerMockRecorder) Err() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Err", reflect.TypeOf((*MockConsumerInfoLister)(nil).Err))
}

// Info mocks base method.
func (m *MockConsumerInfoLister) Info() <-chan *jetstream.ConsumerInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Info")
	ret0, _ := ret[0].(<-chan *jetstream.ConsumerInfo)
	return ret0
}

// Info indicates an expected call of Info.
func (mr *MockConsumerInfoListerMockRecorder) Info() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockConsumerInfoLister)(nil).Info))
}
