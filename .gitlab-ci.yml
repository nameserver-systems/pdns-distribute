image: registry.gitlab.com/nameserver-systems/images/ci/go

variables:
  REPO_NAME: gitlab.com/nameserver-systems/pdns-distribute

stages:
  - test
  - inspect
  - build
  - deploy

workflow:
  rules:
    - when: always

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
    - make download-dep
  cache:
    paths:
      - .go/pkg/mod/

test:
  stage: test
  extends: .go-cache
  rules:
    - when: always
  script:
    - make test

golinting:
  stage: inspect
  extends: .go-cache
  allow_failure: false
  rules:
    - when: always
  script:
    - make golangci-all

check-shell-scripts:
  stage: inspect
  allow_failure: false
  rules:
    - when: always
  script:
    - make check-shell-scripts

main-build:
  stage: build
  before_script:
    - make download-dep
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always
  artifacts:
    expire_in: 1h
    paths:
      - bin/*
  script:
    - make pre-build

production-build:
  stage: build
  before_script:
    - make download-dep
  resource_group: binary-production
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
  artifacts:
    expire_in: 1h
    paths:
      - bin/
  script:
    - make release

deploy-production:
  stage: deploy
  resource_group: binary-production
  needs: [ "production-build" ]
  dependencies:
    - production-build
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
  script:
    - "lftp -c \"set ftp:ssl-force true; set ssl:verify-certificate true; open -u $FTPS_USER_REPO,$FTPS_PW_REPO $FTPS_HOST_REPO; mirror --verbose --include-glob='*.deb' --include-glob='*.txt' --reverse --no-recursion --delete bin/  ./latest/; bye\" "
    - "lftp -c \"set ftp:ssl-force true; set ssl:verify-certificate true; open -u $FTPS_USER_REPO,$FTPS_PW_REPO $FTPS_HOST_REPO; mirror --verbose --include-glob='*.deb' --include-glob='*.txt' --include-glob='*.tar.gz' --reverse --no-recursion --delete bin/  ./archive/$CI_COMMIT_TAG/; bye\" "

make-documentation:
  image: registry.gitlab.com/nameserver-systems/images/ci/python
  stage: build
  resource_group: doc-production
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      when: always
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      changes:
        - "**/*.md"
        - "mkdocs.yml"
        - "poetry.lock"
        - "pyproject.toml"
      when: always
  artifacts:
    expire_in: 1h
    paths:
      - site/
  script:
    - "poetry install --without dev"
    - "poetry run mkdocs build --clean --strict"

deploy-documentation:
  image: registry.gitlab.com/nameserver-systems/images/ci/python
  stage: deploy
  resource_group: doc-production
  needs: [ "make-documentation" ]
  dependencies:
    - make-documentation
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      when: always
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      changes:
        - "**/*.md"
        - "mkdocs.yml"
        - "poetry.lock"
        - "pyproject.toml"
      when: always
  script:
    - "lftp -c \"set ftp:ssl-force true; set ssl:verify-certificate false; open -u $FTPS_USER_DOC,$FTPS_PW_DOC $FTPS_HOST_DOC; mirror --verbose --reverse --delete site/  ./; bye\" "
