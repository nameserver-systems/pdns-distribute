name: production-build

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser-production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: './go.mod'

      - name: Generate goreleaser config
        run: make generate-goreleaser-config

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release -f .goreleaser.yml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: goreleaser-artifacts
          path: bin/

  deploy-binaries:
    needs:
      - goreleaser-production
    container: registry.gitlab.com/nameserver-systems/images/ci/python
    runs-on: ubuntu-latest
    env:
      FTPS_USER_REPO: ${{ secrets.FTPS_USER_REPO }}
      FTPS_PW_REPO: ${{ secrets.FTPS_PW_REPO }}
      FTPS_HOST_REPO: ${{ secrets.FTPS_HOST_REPO }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: goreleaser-artifacts
          path: bin/

      - name: Extract semantic version
        run: echo "SEMANTIC_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Deploy artifacts to latest path
        run: lftp -c "set ftp:ssl-force true; set ssl:verify-certificate false; open -u $FTPS_USER_REPO,$FTPS_PW_REPO $FTPS_HOST_REPO; mirror --verbose --include-glob='*.deb' --include-glob='*.txt' --reverse --no-recursion --delete bin/  ./latest/; bye"

      - name: Deploy artifacts to versioned path
        run: lftp -c "set ftp:ssl-force true; set ssl:verify-certificate false; open -u $FTPS_USER_REPO,$FTPS_PW_REPO $FTPS_HOST_REPO; mirror --verbose --include-glob='*.deb' --include-glob='*.txt' --include-glob='*.tar.gz' --reverse --no-recursion --delete bin/  ./archive/${{ env.SEMANTIC_VERSION }}/; bye"
